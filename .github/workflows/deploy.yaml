name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  commit_info:
    runs-on: ubuntu-latest
    outputs:
      author: ${{ steps.commit_info.outputs.author }}
      message: ${{ steps.commit_info.outputs.message }}
      branch: ${{ steps.commit_info.outputs.branch }}
    steps:
      - uses: actions/checkout@v3
      - name: Collect commit info
        id: commit_info
        run: |
          echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "message<<COMMIT_MESSAGE_EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%B >> $GITHUB_OUTPUT
          echo "COMMIT_MESSAGE_EOF" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

  # build-hub:
  #   runs-on: blacksmith-4vcpu-ubuntu-2204
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       if: github.event_name != 'pull_request'
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #       with:
  #         version: latest
  #     - name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         file: ./.docker/app/Dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         pull: true
  #         tags: |
  #           allypost/downloader-hub:latest
  #           allypost/downloader-hub:${{ github.sha }}
  #         cache-from: type=s3,region=${{ vars.CACHE_AWS_REGION }},bucket=${{ vars.CACHE_AWS_BUCKET_NAME }},endpoint_url=${{ vars.CACHE_AWS_ENDPOINT_URL_S3 }},use_path_style=true
  #         cache-to: type=s3,region=${{ vars.CACHE_AWS_REGION }},bucket=${{ vars.CACHE_AWS_BUCKET_NAME }},endpoint_url=${{ vars.CACHE_AWS_ENDPOINT_URL_S3 }},use_path_style=true,upload_parallelism=8,touch_refresh=1h,mode=max

  build-telegram-bot:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.docker/app/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          tags: |
            allypost/downloader-telegram-bot:latest
            allypost/downloader-telegram-bot:${{ github.sha }}
          build-args: |
            BINARY_NAME=downloader-telegram-bot
          cache-from: type=s3,region=${{ vars.CACHE_AWS_REGION }},bucket=${{ vars.CACHE_AWS_BUCKET_NAME }},endpoint_url=${{ vars.CACHE_AWS_ENDPOINT_URL_S3 }},use_path_style=true
          cache-to: type=s3,region=${{ vars.CACHE_AWS_REGION }},bucket=${{ vars.CACHE_AWS_BUCKET_NAME }},endpoint_url=${{ vars.CACHE_AWS_ENDPOINT_URL_S3 }},use_path_style=true,upload_parallelism=8,touch_refresh=1h,mode=max

  notify-failed:
    runs-on: ubuntu-latest
    # needs: [commit_info, build-hub, build-telegram-bot]
    needs: [commit_info, build-telegram-bot]
    if: failure()
    steps:
      - name: Notify chats
        uses: containrrr/shoutrrr-action@v1
        with:
          url: ${{ secrets.SHOUTRRR_URL }}
          # title: "Failed to build `${{ github.repository }}`"
          message: |
            *Repo:* [${{ github.repository }}](https://github.com/${{ github.repository }})

            *‚ùå FAILED* build and deploy

            üìù Commit by [${{ needs.commit_info.outputs.author }}](https://github.com/${{ needs.commit_info.author }}) on [${{ needs.commit_info.outputs.branch }}](https://github.com/tree/${{ needs.commit_info.outputs.branch }}):
            ```
            ${{ needs.commit_info.outputs.message }}
            ```

            [üåê Link to build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) [üï∏Ô∏è Link to commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})

  deploy-and-notify-success:
    runs-on: ubuntu-latest
    # needs: [commit_info, build-hub, build-telegram-bot]
    needs: [commit_info, build-telegram-bot]
    if: success()
    steps:
      - name: Notify Watchtower
        run: |
          curl -sL -v \
            --header 'Authorization: Bearer ${{ secrets.WATCHTOWER_TOKEN }}' \
            "${{ vars.WATCHTOWER_URL }}/v1/update"
      - name: Notify chats
        uses: containrrr/shoutrrr-action@v1
        with:
          url: ${{ secrets.SHOUTRRR_URL }}
          # title: "Deployed `${{ github.repository }}`"
          message: |
            *Repo:* [${{ github.repository }}](https://github.com/${{ github.repository }})

            *‚úÖ SUCCESS* for build and deploy

            üìù Commit by [${{ needs.commit_info.outputs.author }}](https://github.com/${{ needs.commit_info.author }}) on [${{ needs.commit_info.outputs.branch }}](https://github.com/tree/${{ needs.commit_info.outputs.branch }}):
            ```
            ${{ needs.commit_info.outputs.message }}
            ```

            [üåê Link to build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) [üï∏Ô∏è Link to commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
